name: Development branches

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'
  pull_request:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and run tests
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Expose branch name
        run: echo ${{ github.ref }}

      # Setup JDK and Maven
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          cache: maven

      # Prepare
      - name: Prepare Maven Wrapper
        run: chmod +x ./mvnw

      # Build
      - name: Build with Maven
        run: ./mvnw clean verify -U -B -ntp -T4

      # Get GPG private key into GPG
      - name: Import GPG Owner Trust
        run: echo "${{ secrets.GPG_OWNERTRUST }}" | base64 --decode | gpg --import-ownertrust

      - name: Import GPG key
        run: echo "${{ secrets.GPG_SECRET_KEYS }}" | base64 --decode | gpg --import --no-tty --batch --yes --always-trust

      # Publish release
      - name: Deploy a new snapshot version to Maven Central
        run: ./mvnw clean deploy -B -ntp -DskipTests -DskipExamples -Prelease -Dgpg.keyname="${{ secrets.GPG_KEYNAME }}" -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
        env:
          OSS_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSS_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}


      - name: Upload coverage to Codecov
        if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
